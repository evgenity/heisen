"""
Django settings for heisen project.

Generated by 'django-admin startproject' using Django 1.10.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os
SECRET_KEY = 'fzk#=xkr$fr%)!s5wz$j*x-phhf4g41yu%i%emw##v9!xmtm^_'
APPEND_SLASH = False
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

LOGIN_REDIRECT_URL = '/'
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ALLOWED_HOSTS = ['127.0.0.1', 'localhost','*']


# Application definition

INSTALLED_APPS = [
    'django_crontab',
    'social.apps.django_app.default',
    'partners.apps.PartnersConfig',
    'team.apps.TeamConfig',
    'home.apps.HomeConfig',
    'tasks.apps.TasksConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_comments',
    'django.contrib.sites',
    'django.contrib.sitemaps',
    'mptt',
    'tagging',
    'zinnia',
    'django_rq'
]
SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'heisen.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['heisen/templates','blog/templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'zinnia.context_processors.version',

            ],
        },
    },
]

WSGI_APPLICATION = 'heisen.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        #'NAME': os.path.join(BASE_DIR, '/db/db.sqlite3'),
        'NAME':'/tmp/db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

MEDIA_ROOT = 'uploads/'

MEDIA_URL = 'uploads/'

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


#Django-crontab settings
#https://pypi.python.org/pypi/django-crontab
CRONJOBS = [
    ('2 * * * *', 'home.cron.updater'),
]

# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "../static/")
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "heisen/static"),
]

#Slack part
SOCIAL_AUTH_SLACK_KEY = os.environ.get('SLACK_CLIENT_ID')
SOCIAL_AUTH_SLACK_SECRET = os.environ.get('SLACK_CLIENT_SECRET')
SOCIAL_AUTH_SLACK_SCOPE = ['identify']
SOCIAL_AUTH_SANITIZE_REDIRECTS = False
SOCIAL_AUTH_SLACK_AUTH_EXTRA_ARGUMENTS = {'team': 'heisenspaces'}

AUTHENTICATION_BACKENDS = (
    'social.backends.slack.SlackOAuth2',
)

SOCIAL_AUTH_PIPELINE = (
    'social.pipeline.social_auth.social_details',
    'social.pipeline.social_auth.social_uid',
    'social.pipeline.social_auth.auth_allowed',
    'social.pipeline.social_auth.social_user',
    'social.pipeline.user.get_username',
    'social.pipeline.user.create_user',
    'heisen.views.bind_user',
    'social.pipeline.social_auth.associate_user',
    'social.pipeline.social_auth.load_extra_data',
    'social.pipeline.user.user_details',
)

TEMPLATE_CONTEXT_PROCESSORS = (
    'social.apps.django_app.context_processors.backends',
    'social.apps.django_app.context_processors.login_redirect',
)

RQ_QUEUES = {
    'default': {
        'HOST': 'localhost',
        'PORT': 6379,
        'DB': 0,
        'DEFAULT_TIMEOUT': 500,
    },
}

import django_rq
from home.cron import updater
from datetime import datetime
scheduler = django_rq.get_scheduler('default')
#job = scheduler.enqueue_at(datetime(2020, 10, 10), func)
job = scheduler.schedule(
    scheduled_time=datetime.utcnow(), # Time for first execution, in UTC timezone
    func=updater,                     # Function to be queued
    args=[],             # Arguments passed into function when executed
    kwargs={},         # Keyword arguments passed into function when executed
    interval=180,                   # Time before the function is called again, in seconds
    repeat=None                      # Repeat this number of times (None means repeat forever)
)

#Zinnia part
ZINNIA_MARKUP_LANGUAGE = 'markdown'
ZINNIA_PAGINATION = 5
ZINNIA_UPLOAD_TO = 'heisen/static/images/'
