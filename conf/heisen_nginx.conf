
  server {
      listen 80 default_server;
      listen [::]:80 default_server;

      # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
      return 301 https://heisen.me;
  }

  server {
      listen 443 ssl http2;
      listen [::]:443 ssl http2;
      server_name heisen.me www.heisen.me;
      # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
      ssl_certificate /etc/letsencrypt/live/heisen.me/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/heisen.me/privkey.pem;
      ssl_trusted_certificate /etc/letsencrypt/live/heisen.me/chain.pem;

      # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
      #ssl_dhparam /path/to/dhparam.pem;

      # modern configuration. tweak to your needs.
      ssl_protocols TLSv1.2;
      ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
      ssl_prefer_server_ciphers on;

      # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
      add_header Strict-Transport-Security max-age=15768000;

      # OCSP Stapling ---
      # fetch OCSP records from URL in ssl_certificate and cache them
      ssl_stapling on;
      ssl_stapling_verify on;

      ## verify chain of trust of OCSP response using Root CA and Intermediate certs
      #ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;

      #resolver <IP DNS resolver>;

      access_log  /var/log/nginx/heisen.log;

      location /static/ {
          root /code/;
          expires 30d;
      }

      location / {
          proxy_pass http://127.0.0.1:5000;
          proxy_set_header Host $server_name;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      }
  }

